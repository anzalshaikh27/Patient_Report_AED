/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.Doctor;

/**
 *
 * @author anzal
 */
public class DoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorJPanel
     */
    Doctor doctor;
    
    public DoctorJPanel(Doctor doctor) {
        initComponents();
        this.doctor = doctor;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblDrNmae = new javax.swing.JLabel();
        lblDrAddress = new javax.swing.JLabel();
        lblDoctorID = new javax.swing.JLabel();
        lblSpecialty = new javax.swing.JLabel();
        lblVisitFee = new javax.swing.JLabel();
        lblVisitTime = new javax.swing.JLabel();
        lblDoctorNumber = new javax.swing.JLabel();
        txtDrName = new javax.swing.JTextField();
        txtOfficeAddr = new javax.swing.JTextField();
        txtDrID = new javax.swing.JTextField();
        txtSpecialty = new javax.swing.JTextField();
        txtVisitFee = new javax.swing.JTextField();
        txtVisitTime = new javax.swing.JTextField();
        txtDrNum = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        lblTitle.setBackground(new java.awt.Color(204, 255, 204));
        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Doctor Information");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDrNmae.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblDrNmae.setText("Doctor Name : ");

        lblDrAddress.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblDrAddress.setText("Office Address  : ");

        lblDoctorID.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblDoctorID.setText("Doctor_ID : ");

        lblSpecialty.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblSpecialty.setText("Specialty : ");

        lblVisitFee.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblVisitFee.setText("Visit Fee : ");

        lblVisitTime.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblVisitTime.setText("Visit Time : ");

        lblDoctorNumber.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblDoctorNumber.setText("Doctor Number : ");

        txtOfficeAddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOfficeAddrActionPerformed(evt);
            }
        });

        txtVisitFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVisitFeeActionPerformed(evt);
            }
        });

        txtDrNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrNumActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 0, 0));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDoctorNumber)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDrNum, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDrAddress)
                                            .addComponent(lblDoctorID)
                                            .addComponent(lblSpecialty)
                                            .addComponent(lblVisitFee)
                                            .addComponent(lblVisitTime))
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtVisitTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                            .addComponent(txtVisitFee, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSpecialty, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDrID, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtOfficeAddr)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDrNmae)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDrName, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(btnSave)))
                        .addGap(82, 229, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDrNmae)
                    .addComponent(txtDrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDrAddress)
                    .addComponent(txtOfficeAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorID)
                    .addComponent(txtDrID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpecialty)
                    .addComponent(txtSpecialty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVisitFee)
                    .addComponent(txtVisitFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblVisitTime))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtVisitTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorNumber)
                    .addComponent(txtDrNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnSave)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtOfficeAddrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOfficeAddrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOfficeAddrActionPerformed

    private void txtVisitFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVisitFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVisitFeeActionPerformed

    private void txtDrNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDrNumActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        String dname = txtDrName.getText();
        String addr = txtOfficeAddr.getText();
        String doc_id = txtDrID.getText();
        String specialty = txtSpecialty.getText();
        String visit_fee = txtVisitFee.getText();
        String visit_time = txtVisitTime.getText();
        String dnumber = txtDrNum.getText();
        
        if (isEmptyValue(dname) && containsOnlyLetters(dname)) {
                     doctor.setDoc_name(txtDrName.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor Name: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(addr)) {
                     doctor.setOffice_addr(txtOfficeAddr.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor's Office Address: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(doc_id)) {
                     doctor.setDoc_id(txtDrID.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor' ID: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(specialty) && containsOnlyLetters(specialty)) {
                     doctor.setSpecialty(txtSpecialty.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor' Specialty: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
       
        if (isEmptyValue(visit_fee)) {
                     doctor.setVisit_fee(txtVisitFee.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor's Visit Fee: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(visit_time)) {
                     doctor.setVisit_time(txtVisitTime.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor's Visit Time: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(dnumber) && isValidPhoneNumber(dnumber)) {
                     doctor.setDoc_number(txtDrNum.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Doctor's Number: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
       
        JOptionPane.showMessageDialog(this,"Doctor Information Saved ");
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private static boolean isEmptyValue(String name) {
        return !name.isEmpty();
    }
     
     private boolean containsOnlyLetters(String name) {
                return name.matches("^[a-zA-Z]*$");
            }
     
     private static boolean isValidPhoneNumber(String phone) {
        String regex = "^[0-9\\-\\s]+$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(phone);

        return matcher.matches();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblDoctorID;
    private javax.swing.JLabel lblDoctorNumber;
    private javax.swing.JLabel lblDrAddress;
    private javax.swing.JLabel lblDrNmae;
    private javax.swing.JLabel lblSpecialty;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVisitFee;
    private javax.swing.JLabel lblVisitTime;
    private javax.swing.JTextField txtDrID;
    private javax.swing.JTextField txtDrName;
    private javax.swing.JTextField txtDrNum;
    private javax.swing.JTextField txtOfficeAddr;
    private javax.swing.JTextField txtSpecialty;
    private javax.swing.JTextField txtVisitFee;
    private javax.swing.JTextField txtVisitTime;
    // End of variables declaration//GEN-END:variables
}
